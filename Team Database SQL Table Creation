CREATE TABLE User (
    userID INT(8),
    userName VARCHAR(250),
    firstName VARCHAR(250),
    lastName VARCHAR(250),
    email VARCHAR(250),
    phoneNumber VARCHAR(12),
    DOB DATE,
    PRIMARY KEY (userID)
    );

CREATE TABLE Posts (
    postID INT(8),
    userID INT(8),
    postContent VARCHAR(250),
    postDate DATE,
    likes INT(8),
    PRIMARY KEY(postID),
    FOREIGN KEY(userID) REFERENCES User(userID)
    );

CREATE TABLE Comments (
    commentID INT(8),
    commentContent VARCHAR(250),
    userID INT(8),
    PRIMARY KEY(commentID),
    FOREIGN KEY(userID) REFERENCES User(userID)
    );

CREATE TABLE musicAssess (
    assessID INT(8),
    userID INT(8),
    favGenre VARCHAR(250),
    favArtist VARCHAR(250),
    setting VARCHAR(250),
    PRIMARY KEY(assessID),
    FOREIGN KEY(userID) REFERENCES User(userID)
    );

CREATE TABLE groupName (
    groupID INT(8),
    groupName VARCHAR(250),
    userID INT(8),
    PRIMARY KEY(groupID),
    FOREIGN KEY(userID) REFERENCES User(userID)
    );



CREATE TABLE Profile (
    -> profileID INT(8),
    -> firstName VARCHAR(250),
    -> lastName VARCHAR(250),
    -> password VARCHAR(250), 
    -> followers INT(),
	-> bio VARCHAR(250),
	-> userID INT(8),
	-> PRIMARY KEY(profileID),
	-> FOREIGN KEY(userID) REFERENCES 	User(userID)
	-> );


CREATE TABLE Song (
	-> songID INT(8),
	-> artistID INT(8),
	-> artistName VARCHAR(250),
	-> title VARCHAR(250), 
	-> length VARCHAR(5),
	-> genre VARCHAR(250), 
	-> PRIMARY KEY(songID),
	-> FOREIGN KEY(artistID) REFERENCES 	Artist(artistID)
	);

CREATE TABLE Playlist (
	-> playlistID INT(8),
	-> playlistName VARCHAR(250),
	-> songID INT(8),
	-> PRIMARY KEY(playlistID),
	-> FOREIGN KEY(songsID) REFERENCES 	Song(songID)
	);

CREATE TABLE Artist (
	-> artistID INT(8),
	-> userID INT(8),
	-> PRIMARY KEY(artistID),
	-> FOREIGN KEY(userID) REFERENCES 	User(userID)
	);
CREATE TABLE Event (
	-> eventID INT(8),
	-> userID INT(8),
        -> date DATE NOT NULL,
	-> time TIME NOT NULL,
	-> PRIMARY KEY(eventID),
	-> FOREIGN KEY(userID) REFERENCES 	User(userID)
	);